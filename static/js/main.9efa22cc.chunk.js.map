{"version":3,"sources":["components/selectStatusColor.js","components/TimelineCard.js","components/FundraiserTimeline.js","components/AllFundraisers.js","components/EditFundraiser.js","reducers/recordsReducer.js","components/FundraiserDetails.js","components/SingleAlert.js","components/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["selectStatusColor","status","TimelineCard","fundraiser","organization","contactFirstName","contactPhone","contactEmail","deliveryDate","email","date","style","backgroundColor","padding","margin","width","borderRadius","color","format","Date","ph","match","replace","formatPhoneNumber","href","FundraiserTimeline","fundraisers","setHovered","recordsDispatch","useContext","RecordsContext","mode","marginLeft","maxWidth","map","Item","onMouseEnter","onMouseLeave","onClick","recordName","chosenRecord","find","matchesProperty","type","payload","chooseRecord","AllFundraisers","field","hoveredID","recordsState","updatedFundraisers","record","Math","round","dataSource","sortBy","createSorter","a","b","columns","title","dataIndex","key","sorter","render","toUpperCase","item","filters","text","value","onFilter","indexOf","product","className","chooseProduct","pagination","size","id","scroll","x","y","onRow","rowIndex","event","recordID","EditFundraiser","recordToEdit","editDrawerVisible","useState","existingValues","setExistingValues","Form","useForm","form","useEffect","base","err","console","error","Option","Select","labelCol","span","wrapperCol","name","initialValues","onFinish","values","update","records","log","label","Group","rules","placeholder","allowClear","formatter","parser","offset","htmlType","recordsReducer","state","action","allRecords","focusedRecordID","viewFocusedRecord","recordHasChanged","alert","Error","Meta","Card","FundraiserDetails","recordToDisplay","fundraiserName","deliveryCity","products","deliveryAddress","deliveryState","deliveryZip","deliveryNotes","daysUntilDelivery","contactLastName","contactAddress","contactAddressLine2","contactCity","contactState","contactZip","contactPreferredMethod","buttCount","hamCount","turkeyCount","sauceCount","customerButtPrice","customerHamPrice","customerTurkeyPrice","customerSaucePrice","firehouseFee","orderTotals","sellerRecords","totalRevenue","organizationProceeds","orders","total","push","length","totalProducts","toLowerCase","extra","gutter","flex","bordered","height","actions","disabled","layout","column","toFixed","SingleAlert","message","showAlert","showIcon","closable","Alerts","alertList","setAlertList","display","flexDirection","alignItems","index","Header","Layout","Content","Sider","Airtable","apiKey","process","React","createContext","initialState","App","setFundraisers","setShowAlert","focusedFundraiser","setFocusedFundraiser","useReducer","select","view","eachPage","fetchNextPage","fields","Provider","position","zIndex","theme","defaultSelectedKeys","overflow","left","minHeight","forceRender","visible","onClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9efa22cc.chunk.js","sourcesContent":["const selectStatusColor = (status) => {\n    switch (status) {\n        case 'Inquiry':\n            return '#f50';\n        case 'Active':\n            return '#7cb305';\n        case 'Finalized':\n            return '#faad14';\n        case 'Delivered':\n            return '#597ef7';\n        case 'Cancelled':\n            return '#bfbfbf';\n        default:\n            return '#bfbfbf';\n    }\n};\n\nexport default selectStatusColor;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport { format } from 'date-fns'\nimport selectStatusColor from './selectStatusColor';\n\nconst TimelineCard = ({ fundraiser }) => {\n\n    const convertedDate = (date) => format(new Date(date), 'MMMM dd');\n\n    const { \n        organization,\n        contactFirstName,\n        contactPhone,\n        contactEmail,\n        status,\n        deliveryDate,\n    } = fundraiser;\n    \n    function formatPhoneNumber(ph) {\n        var cleaned = ('' + ph).replace(/\\D/g, '');\n        var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n        if (match) {\n          return '(' + match[1] + ') ' + match[2] + '-' + match[3];\n        }\n        return null;\n      }\n\n    const createEmailLink = (email) => `mailto:${email}`;\n\n    return (\n        <div style={{backgroundColor: \"white\", padding: \"8px 8px\", margin: \"2px 0px\", width: \"200px\", borderRadius: \"5px\" }}>\n            <h2 style={{ color: selectStatusColor(status), margin: 0}}>{convertedDate(deliveryDate)}</h2>\n            <h3 style={{ color: \"#595959\", margin: 0}}>{organization}</h3>\n            <div style={{color: \"#595959\" }}>{contactFirstName}</div>\n            <div style={{color: \"#595959\" }}>{formatPhoneNumber(contactPhone)}</div>\n            <a href={createEmailLink(contactEmail)}>Email</a>  \n                {/* <div className=\"bigIcons\">🐖 Butts - {buttCount > 0  ? buttCount : \"0\"} </div>\n                <div className=\"bigIcons\">🐷 Hams - {hamCount > 0  ? hamCount : \"0\"} </div>\n                <div className=\"bigIcons\">🦃 Turkeys - {turkeyCount > 0  ? turkeyCount : \"0\"} </div>\n                <div className=\"bigIcons\">🥫 Sauces - {sauceCount > 0  ? sauceCount : \"0\"} </div> */}\n            {/* <Button type=\"contact\">Button</Button> */}\n            {/* <h3>{convertedDate.toDateString()}</h3> */}\n            {/* <h3>{testDate.toDateString()}</h3> */}\n        </div>\n    )\n};\n\nexport default TimelineCard;","import  React, { useContext } from 'react';\nimport TimelineCard from './TimelineCard';\nimport { Timeline } from 'antd';\nimport selectStatusColor from './selectStatusColor';\nimport { find, matchesProperty } from 'lodash';\nimport {RecordsContext} from '../App';\n\n\nconst FundraiserTimeline = ({ fundraisers, setHovered }) => {\n  const chooseRecord = (recordName) => {\n    const chosenRecord = find(fundraisers, matchesProperty('organization', recordName));\n    recordsDispatch({type: 'chooseRecord', payload: chosenRecord[\"recordID\"]})\n  }\n  \n  const {\n    recordsDispatch\n  } = useContext(RecordsContext);\n  \n  return (\n    <div>\n      <div>\n        <Timeline\n          mode=\"left\"\n          style={{\n            marginLeft: \"20px\",\n            padding: \"100px 40px 0px 0px\",\n            maxWidth: '500px'\n          }}\n        >\n        {fundraisers.map(fundraiser => (\n            <Timeline.Item \n              onMouseEnter={() => setHovered(fundraiser['recordID'])}\n              onMouseLeave={() => setHovered(null)}\n              onClick={() => chooseRecord(fundraiser['organization'])}\n              color={selectStatusColor(fundraiser[\"status\"])}\n              key={fundraiser[\"recordID\"]}\n            >\n              <TimelineCard fundraiser={fundraiser} />\n            </Timeline.Item>\n        ))}\n        </Timeline>\n      </div>\n    </div>\n  );\n}\n\nexport default FundraiserTimeline;\n","import React, {useContext} from 'react';\nimport {sortBy, find, matchesProperty} from 'lodash';\nimport {\n    Table,\n    Tag,\n} from 'antd';\nimport {format} from 'date-fns';\nimport selectStatusColor from './selectStatusColor.js';\nimport {RecordsContext} from '../App';\n\nconst AllFundraisers = ({fundraisers}) => {\n    const {\n        recordsDispatch,\n        recordsState: {\n            hoveredID\n        }\n    } = useContext(RecordsContext);\n\n    const convertedDate = (date) => format(new Date(date), 'MMM dd');\n\n    const chooseRecord = (recordName) => {\n        const chosenRecord = find(fundraisers, matchesProperty('organization', recordName));\n        // console.log(\"chosenRecord['recordID']: \", chosenRecord['recordID']);\n        recordsDispatch({type: 'chooseRecord', payload: chosenRecord[\"recordID\"]})\n    }\n\n    const updatedFundraisers = fundraisers.map(record => {\n        return {\n            ...record,\n            'deliveryDate': convertedDate(record['deliveryDate']),\n            'organizationProceeds': `$${\n                Math.round(record['organizationProceeds'])\n            }`,\n            'totalRevenue': `$${\n                Math.round(record['totalRevenue'])\n            }`,\n            'firehouseFee': `$${\n                Math.round(record['firehouseFee'])\n            }`,\n            'isHovered': record['recordID'] === hoveredID,\n            'key': record[\"recordID\"]\n        }\n    });\n\n\n    // const {\n    //   fundraiserName,\n    //   deliveryDate,\n    //   daysUntilDelivery,\n    //   deliveryAddress,\n    //   deliveryCity,\n    //   deliveryState,\n    //   deliveryZip,\n    //   deliveryNotes,\n    //   products,\n    //   customerButtPrice,\n    //   customerHamPrice,\n    //   customerTurkeyPrice,\n    //   customerSaucePrice,\n    //   firehouseButtPrice,\n    //   firehouseHamPrice,\n    //   firehouseTurkeyPrice,\n    //   firehouseSaucePrice,\n    //   buttCount,\n    //   hamCount,\n    //   turkeyCount,\n    //   sauceCount,\n    //   status,\n    //   priority,\n    //   orders,\n    //   orderTotals,\n    //   totalRevenue,\n    //   organization,\n    //   contactFirstName,\n    //   contactLastName,\n    //   contactFullName,\n    //   contactEmail,\n    //   contactPhone,\n    //   contactPreferredMethod,\n    //   contactAddress,\n    //   contactAddressLine2,\n    //   contactCity,\n    //   contactState,\n    //   contactZip,\n    //   contactIsBilling,\n    //   billingContactFullName,\n    //   billingEmail,\n    //   billingPhone,\n    //   recordID,\n    //   sellers,\n    //   allOrders,\n    //   orderCount,\n    //   firehouseFee,\n    //   ccFees,\n    //   organizatinProceeds\n    // } = updatedFundraisers;\n\n    const dataSource = sortBy(updatedFundraisers, ['priority', 'deliveryDate']);\n\n    const createSorter = (field) => (a, b) => a[field] >= b[field] ? -1 : 1;\n    const createFilter = (field) => (value, record) => record[field].indexOf(value) === 0;\n    const isHovered = (id) => id === hoveredID;\n\n    const getRowHeightAndSetTop = (data, value) => {\n        data && data.forEach((item, index) => {\n            if (item.id === value) {\n                setTableScrollTop(index);\n            }\n        })\n    }\n\n    const setTableScrollTop = (id, index) => {\n        if (index != 0 || index != -1){\n            let currentPosition = index *40;\n            document.getElementById(id).scrollTop(currentPosition);\n        }\n    }\n\n    const chooseProduct = (product) => {\n        switch (product) {\n            case 'Boston Butts':\n                return <div key={product} className='tagContentHolder'>\n                    <div className='circleBackground'\n                        style={\n                            {backgroundColor: '#597ef7'}\n                    }>B</div>\n                    <div className='productTagName'\n                        style={\n                            {color: '#597ef7'}\n                    }>\n                        {product}</div>\n                </div>\n            case 'Half Hams':\n                return <div key={product} className='tagContentHolder'>\n                    <div className='circleBackground'\n                        style={\n                            {backgroundColor: '#7cb305'}\n                    }>H</div>\n                    <div className='productTagName'\n                        style={\n                            {color: '#7cb305'}\n                    }>\n                        {product}</div>\n                </div>\n            case 'Whole Turkeys':\n                return <div key={product} className='tagContentHolder'>\n                    <div className='circleBackground'\n                        style={\n                            {backgroundColor: '#13c2c2'}\n                    }>T</div>\n                    <div className='productTagName'\n                        style={\n                            {color: '#13c2c2'}\n                    }>\n                        {product}</div>\n                </div>\n            case 'BBQ Sauce':\n                return <div key={product} className='tagContentHolder'>\n                    <div className='circleBackground'\n                        style={\n                            {backgroundColor: '#9254de'}\n                    }>S</div>\n                    <div className='productTagName'\n                        style={\n                            {color: '#9254de'}\n                    }>\n                        {product}</div>\n                </div>\n            default:\n                return null;\n        }\n    }\n\n    const columns = [\n        {\n            title: 'Organization',\n            dataIndex: 'organization',\n            key: 'organization',\n            sorter: createSorter('organization'),\n            render: organization => (\n                <>\n                    <div>{organization}</div>\n                </>\n            )\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => (\n                <>\n                    <Tag color={\n                            selectStatusColor(status)\n                        }\n                        key={status}>\n                        {\n                        status.toUpperCase()\n                    } </Tag>\n                </>\n            ),\n            sorter: createSorter('status')\n        },\n        {\n            title: 'Sales',\n            dataIndex: 'totalRevenue',\n            key: 'totalRevenue',\n            sorter: (a, b) => a['totalRevenue'] - b['totalRevenue'],\n            render: item => (\n                <>\n                    <div>{item}</div>\n                </>\n            )\n        },\n        {\n            title: 'FH Total',\n            dataIndex: 'firehouseFee',\n            key: 'firehouseFee',\n            render: item => (\n                <>\n                    <div>{item}</div>\n                </>\n            )\n        }, {\n            title: 'Org Total',\n            dataIndex: 'organizationProceeds',\n            key: 'organizationProceeds',\n            render: item => (\n                <>\n                    <div>{item}</div>\n                </>\n            )\n        }, {\n            title: 'D-Date',\n            dataIndex: 'deliveryDate',\n            key: 'deliveryDate',\n            render: item => (\n                <>\n                    <div>{item}</div>\n                </>\n            )\n        }, {\n            title: 'Products',\n            dataIndex: 'products',\n            key: 'products',\n            filters: [\n                {\n                    text: 'Boston Butts',\n                    value: 'Boston Butts'\n                }, {\n                    text: 'Half Hams',\n                    value: 'Half Hams'\n                }, {\n                    text: 'Whole Turkeys',\n                    value: 'Whole Turkeys'\n                }, {\n                    text: 'BBQ Sauce',\n                    value: 'BBQ Sauce'\n                },\n            ],\n            onFilter: createFilter('products'),\n            render: text => {\n                return(text.map((item) => chooseProduct(item)))\n            }\n        },\n    ];\n\n    return (\n        <div>\n            <Table dataSource={dataSource}\n                columns={columns}\n                pagination={false}\n                size='small'\n                id='fundraisersTable'\n                scroll={\n                    {\n                        x: 700,\n                        y: 250\n                    }\n                }\n                onRow={\n                    (record, rowIndex) => {\n                        return {\n                            onClick: event => {\n                                chooseRecord(record[\"organization\"])\n                                // console.log(\"record org \", record[\"organization\"]);\n                            },\n                            className: isHovered(record.recordID) ? 'hovered' : '', // click row\n                            id: `row${record.recordID}`,\n                            key: rowIndex,\n                        };\n                    }\n                }/>\n          </div>\n    );\n}\n\nexport default AllFundraisers;\n","import React, { useContext, useState, useEffect, useForm } from 'react';\nimport {RecordsContext, base} from '../App';\nimport {Form, Input, InputNumber, Button, Select, Radio} from 'antd';\nimport { get } from 'lodash';\n\nconst EditFundraiser = () => {\n    const {recordsDispatch, recordsState: {\n            recordToEdit,\n            editDrawerVisible,\n        }} = useContext(RecordsContext);\n    const [existingValues, setExistingValues] = useState()\n    \n    \n    const [form] = Form.useForm();\n    \n    \n    useEffect(() => {\n        base('Fundraisers').find(recordToEdit, function (err, record) {\n            setExistingValues(record[\"fields\"]);\n            if (err) {\n                console.error(err);\n                return;\n            }\n        })\n    }, []);\n\n    // useEffect(() => {\n    //     form.setFieldsValue(existingValues)\n    // }, [form, existingValues])\n\n\n    // const {\n    //     fundraiserName,\n    //     organization,\n    //     products,\n    //     deliveryCity,\n    //     deliveryAddress,\n    //     deliveryState,\n    //     deliveryZip,\n    //     deliveryNotes,\n    //     deliveryDate,\n    //     daysUntilDelivery,\n    //     contactFirstName,\n    //     contactPhone,\n    //     contactLastName,\n    //     contactAddress,\n    //     contactAddressLine2,\n    //     contactCity,\n    //     contactState,\n    //     contactZip,\n    //     contactPreferredMethod,\n    //     contactEmail,\n    //     status,\n    //     buttCount,\n    //     hamCount,\n    //     turkeyCount,\n    //     sauceCount,\n    //     customerButtPrice,\n    //     customerHamPrice,\n    //     customerTurkeyPrice,\n    //     customerSaucePrice,\n    //     firehouseFee,\n    //     orderTotals,\n    //     totalRevenue,\n    //     sellerRecords,\n    //     organizationProceeds,\n    //     recordID,\n    // } = existingValues;\n\n\n    const {Option} = Select;\n    const layout = {\n        labelCol: {\n            span: 8\n        },\n        wrapperCol: {\n            span: 16\n        }\n    };\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16\n        }\n    };\n\n\n    // const onGenderChange = (value) => {\n    //     switch (value) {\n    //         case 'male':\n    //             form.setFieldsValue({note: 'Hi, man!'});\n    //             return;\n\n    //         case 'female':\n    //             form.setFieldsValue({note: 'Hi, lady!'});\n    //             return;\n\n    //         case 'other':\n    //             form.setFieldsValue({note: 'Hi there!'});\n    //     }\n    // };\n\n    const closeEditDrawer = () => recordsDispatch({\n        type: \"closeEditDrawer\",\n      });\n    \n    const onFinish = (values) => {\n        console.log(values);\n    };\n\n    const onReset = () => {\n        form.resetFields();\n    };\n\n    const submitRecordChanges = (values) => {\n        base('Fundraisers').update([\n            {\n                \"id\": recordToEdit,\n                \"fields\": values,\n            }\n        ], function(err, records) {\n            if (err) {\n                console.log(\"Error: \", err);\n                return;\n            }\n        });\n        recordsDispatch({\n            type: \"updateRecords\",\n        });\n        closeEditDrawer();\n    };\n\n    function getExistingValues() {\n        return existingValues;\n    }\n    // console.log(\"existingValues: \", existingValues);\n\n    // const existingValues = {\"organization\": \"Orange Octagon\", \"buttPrice\": 55}\n\n    // const get()\n\n    return (\n        <div>\n            {existingValues && <Form {...layout}\n                style={{ width: \"80%\" }}\n                // {...layout}\n                form={form}\n                name=\"control-hooks\"\n                initialValues={getExistingValues()}\n                // initialValues={{\n                //     'organization': \"This Is Not The Organization\",\n                // }}\n                onFinish={submitRecordChanges}\n            >\n                <Form.Item name=\"status\" label=\"Status\">\n                    {/* <Select placeholder=\"Change Status\" allowClear>\n                        <Option value=\"Inquiry\">Inquiry</Option>\n                        <Option value=\"Active\">Active</Option>\n                        <Option value=\"Finalized\">Finalized</Option>\n                        <Option value=\"Delivered\">Delivered</Option>\n                        <Option value=\"Cancelled\">Cancelled</Option>\n                    </Select> */}\n                    <Radio.Group>\n                        <Radio value=\"Inquiry\">Inquiry</Radio>\n                        <Radio value=\"Active\">Active</Radio>\n                        <Radio value=\"Finalized\">Finalized</Radio>\n                        <Radio value=\"Delivered\">Delivered</Radio>\n                        <Radio value=\"Cancelled\">Cancelled</Radio>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"deliveryAddress\" label=\"Delivery Address\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"deliveryCity\" label=\"Delivery City\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"deliveryState\" label=\"Delivery State\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"deliveryZip\" label=\"Delivery Zip\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"organization\"\n                    label=\"Organization\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactFirstName\"\n                    label=\"Primary Contact First Name\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactLastName\"\n                    label=\"Primary Contact Last Name\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactAddress\"\n                    label=\"Primary Contact Address\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactAddressLine2\"\n                    label=\"Primary Contact Address Line 2\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactCity\"\n                    label=\"Primary Contact City\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactState\"\n                    label=\"Primary Contact State\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactZip\"\n                    label=\"Primary Contact Zip\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactPreferredMethod\"\n                    label=\"Preferred Contact Method\">\n                    <Input />\n                </Form.Item>\n                <Form.Item \n                    name=\"contactEmail\"\n                    label=\"Primary Contact Email\">\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"products\" label=\"Products\" rules={ [{ type: 'array' }] }>\n                    <Select mode=\"multiple\" placeholder=\"Edit Products\" allowClear>\n                        <Option value=\"Boston Butts\">Boston Butts</Option>\n                        <Option value=\"Half Hams\">Half Hams</Option>\n                        <Option value=\"Whole Turkeys\">Whole Turkeys</Option>\n                        <Option value=\"BBQ Sauce\">BBQ Sauce</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"firehouseButtPrice\" label=\"Firehouse Butt Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"firehouseHamPrice\" label=\"Firehouse Ham Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"firehouseTurkeyPrice\" label=\"Firehouse Turkey Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"firehouseSaucePrice\" label=\"Firehouse Sauce Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"customerButtPrice\" label=\"Customer Butt Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"customerHamPrice\" label=\"Customer Ham Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"customerTurkeyPrice\" label=\"Customer Turkey Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item name=\"customerSaucePrice\" label=\"Customer Sauce Price\">\n                    <InputNumber \n                        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                        parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                    />\n                </Form.Item>\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                    {/* <Button htmlType=\"button\"\n                        onClick={onReset}>\n                        Reset\n                    </Button> */}\n                </Form.Item>\n            </Form>}\n        </div>\n\n    )\n};\n\nexport default EditFundraiser;\n","const recordsReducer = (state, action) => {\n     // get fundraiser data\n     // get focused fundraiser\n     // get focused fundraiser editor\n     // submit fundraiser edits\n     switch (action.type) {\n          case 'setRecords':\n               // console.log(\"records: \", action.payload);\n               return {\n                    ...state,\n                    allRecords: action.payload,\n               }\n          case 'chooseRecord':\n               // console.log(\"select record: \", action.payload)\n               return {\n                    ...state,\n                    focusedRecordID: action.payload,\n                    viewFocusedRecord: true,\n               };\n          case 'updateRecords':\n               console.log(\"Setting recordHasChanged: true.\")\n               return {\n                    ...state,\n                    recordHasChanged: true,\n               };\n          case 'doNotUpdate':\n               console.log(\"Let it be.\")\n               return {\n                    ...state,\n                    recordHasChanged: false,\n               };\n          case 'setHovered':\n               return {\n                    ...state,\n                    hoveredID: action.payload,\n               };\n          case 'showEditDrawer':\n               return {\n                    ...state,\n                    editDrawerVisible: true,\n                    recordToEdit: action.payload,\n               };\n          case 'closeEditDrawer':\n               return {\n                    ...state,\n                    editDrawerVisible: false,\n                    // recordToEdit: '',\n               }\n          case 'logSuccess':\n               return {\n                    ...state,\n                    alert: {\"type\": \"success\", \"message\": \"Success!\"},\n                    // recordToEdit: '',\n//     const alertList = [{type: \"success\", message: \"Success!\"},{type: \"error\", message: \"Darn. Something went wrong.\"},{type: \"info\", message: \"Something you should know ... is that there is a lengthy thing to say about whatever it is we were discussing. Which I'll remember soon. Honestly.\"}];\n               }\n          case 'logError':\n               return {\n                    ...state,\n                    alert: {\"type\": \"error\", \"message\": \"Darn. Something went wrong.\"},\n               }\n          default: throw new Error('unknown action');\n     }\n};\n\nexport default recordsReducer;","import React, { useContext } from 'react';\nimport {RecordsContext} from '../App';\nimport {\n    Card,\n    Col,\n    Row,\n    Button,\n    Descriptions\n} from 'antd';\n\nconst {Meta} = Card;\n\nconst FundraiserDetails = ({ recordToDisplay }) => {\n    const {\n        recordsDispatch,\n    } = useContext(RecordsContext);\n\n\n    const {\n        fundraiserName,\n        organization,\n        products,\n        deliveryCity,\n        deliveryAddress,\n        deliveryState,\n        deliveryZip,\n        deliveryNotes,\n        deliveryDate,\n        daysUntilDelivery,\n        contactFirstName,\n        contactPhone,\n        contactLastName,\n        contactAddress,\n        contactAddressLine2,\n        contactCity,\n        contactState,\n        contactZip,\n        contactPreferredMethod,\n        contactEmail,\n        status,\n        buttCount,\n        hamCount,\n        turkeyCount,\n        sauceCount,\n        customerButtPrice,\n        customerHamPrice,\n        customerTurkeyPrice,\n        customerSaucePrice,\n        firehouseFee,\n        orderTotals,\n        totalRevenue,\n        sellerRecords,\n        organizationProceeds,\n        recordID,\n    } = recordToDisplay;\n\n    let orders = [];\n    if (orderTotals) {\n        orderTotals.map((total) => orders.push(total));\n    }\n    let sellers = 0;\n    if (sellerRecords) {\n        sellers = sellerRecords.length\n    };\n\n    const relativeDeliveryDate = () => {\n        if (daysUntilDelivery > 0) {\n            return `DELIVERY IN ${daysUntilDelivery} DAYS`\n        } return `DELIVERY WAS ${-daysUntilDelivery} DAYS AGO`\n    }\n\n    const totalProducts = buttCount + hamCount + turkeyCount + sauceCount;\n\n    function formatPhoneNumber(ph) {\n        var cleaned = ('' + ph).replace(/\\D/g, '');\n        var match = cleaned.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n        if (match) {\n            return '(' + match[1] + ') ' + match[2] + '-' + match[3];\n        }\n        return null;\n    }\n\n    const showEditDrawer = () => recordsDispatch({\n        type: \"showEditDrawer\",\n        payload: recordID,\n    });\n\n    // function copyToClipboard() {\n    //     addressHolder.innerText = copytext.innerText;\n    //     Copied = addressHolder.createTextRange();\n    //     Copied.execCommand(\"Copy\")\n    // };\n\n    return (\n        <div className=\"site-card-wrapper\">\n            <Card title={`${fundraiserName} (${status})`}\n                className={\n                    status.toLowerCase()\n                }\n                style={\n                    {\n                        margin: \"16px 0px\",\n                        padding: \"0px\",\n                        backgroundColor: '#fafafa'\n                    }\n                }\n                extra={\n                    <>\n                <Button onClick={() => showEditDrawer()}>Edit</Button></>\n            }>\n                <Row type=\"flex\"\n                    gutter={16}>\n                    <Col flex={\"1 1 30%\"}>\n                        <Col>\n                            <Card bordered={false}\n                                style={\n                                    {height: \"100%\"}\n                                }\n                                actions={\n                                    [\n                                        <>\n                                            <Button disabled>Download Labels</Button>\n                                            <Button disabled>Create Invoice</Button>\n                                        </>\n                                    ]\n                            }>\n                                <Meta title=\"COOK IN ______\"/> {\n                                totalProducts > 0 ? <>\n                                    <div>{\n                                        buttCount > 0 && `${buttCount} Butt${\n                                            buttCount > 1 ? 's' : ''\n                                        }`\n                                    }</div>\n                                    <div>{\n                                        hamCount > 0 && `${hamCount} Ham${\n                                            hamCount > 1 ? 's' : ''\n                                        }`\n                                    }</div>\n                                    <div>{\n                                        turkeyCount > 0 && `${turkeyCount} Turkey${\n                                            turkeyCount > 1 ? 's' : ''\n                                        }`\n                                    }</div>\n                                    <div>{\n                                        sauceCount > 0 && `${sauceCount} Sauce${\n                                            sauceCount > 1 ? 's' : ''\n                                        }`\n                                    }</div>\n                                </> : <div>No sales yet</div>\n                            }\n                                {/* <Button>Download Labels</Button> */} </Card>\n                            <Card bordered={false}\n                                style={\n                                    {height: \"100%\"}\n                            }>\n                                <Meta title=\"THEIR PRODUCTS\"/>\n                                <> {\n                                    customerButtPrice && <div>Boston Butts @ ${customerButtPrice}</div>\n                                }\n                                    {\n                                    customerHamPrice && <div>Half Hams @ ${customerHamPrice}</div>\n                                }\n                                    {\n                                    customerTurkeyPrice && <div>Whole Turkeys @ ${customerTurkeyPrice}</div>\n                                }\n                                    {\n                                    customerSaucePrice && <div>BBQ Sauces @ ${customerSaucePrice}</div>\n                                } </>\n                            </Card>\n                        </Col>\n                    </Col>\n                    <Col flex={\"1 1 30%\"}\n                        style={\n                            {height: \"100%\"}\n                    }>\n                        <Card bordered={false}\n                            // actions={\n                            //     [\n                            //         <>\n                            //             <Button onClick={copyToClipboard}>Copy Address</Button>\n                            //         </>\n                            //     ]\n                            // }\n                        >\n                            {/* <textArea id=\"addresHolder\" style={{display: none}}/> */}\n\n                            {/* <Meta title={`DELIVERY SCHEDULED FOR: ${convertedDate(deliveryDate).toUpperCase()}`} /> */}\n                            <Meta title={\n                                relativeDeliveryDate()\n                            }/>\n                            <Descriptions layout={\"vertical\"}\n                                column={1}>\n                                <Descriptions.Item label=\"Address\">\n                                    {deliveryAddress}<br/>{deliveryCity}, {deliveryState}\n                                    {deliveryZip}</Descriptions.Item>\n                                <Descriptions.Item label=\"Note\">\n                                    {deliveryNotes}</Descriptions.Item>\n                                <Descriptions.Item label=\"\"></Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    </Col>\n                    <Col flex={\"1 1 30%\"}\n                        style={\n                            {height: \"100%\"}\n                    }>\n                        <Card bordered={false}\n                            actions={\n                                [\n                                    <>\n                                        <Button disabled>Reset Password</Button>\n                                        <Button disabled>Email Contact</Button>\n                                    </>\n                                ]\n                        }>\n                            {/* <Meta title={`DELIVERY SCHEDULED FOR: ${convertedDate(deliveryDate).toUpperCase()}`} /> */}\n                            <Meta title={\n                                `${\n                                    contactFirstName.toUpperCase()\n                                } ${\n                                    contactLastName.toUpperCase()\n                                }`\n                            }/>\n                            <Descriptions \n                                // layout={\"vertical\"}\n                                column={1}>\n                                <Descriptions.Item label=\"Phone\">\n                                    {\n                                    formatPhoneNumber(contactPhone)\n                                }</Descriptions.Item>\n                                <Descriptions.Item label=\"Email\">\n                                    {contactEmail}</Descriptions.Item>\n                                <Descriptions.Item label=\"Prefers\">\n                                    {contactPreferredMethod}</Descriptions.Item>\n                                <Descriptions.Item label=\"Address\">\n                                    {contactAddress}\n                                    {contactAddressLine2}<br/>{contactCity}, {contactState}\n                                    {contactZip}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                        <Card bordered={false}>\n                            <Meta title={\n                                `FIREHOUSE PROFIT: $${firehouseFee}`\n                            }/>\n                            <Descriptions column={1}>\n                                <Descriptions.Item label=\"Their Paid Orders\">\n                                    {\n                                    orders.length\n                                }</Descriptions.Item>\n                                <Descriptions.Item label=\"Their Proceeds\">${\n                                    organizationProceeds.toFixed(2)\n                                }</Descriptions.Item>\n                                <Descriptions.Item label=\"\"></Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    </Col>\n                </Row>\n            </Card>\n\n        </div>\n    );\n};\n\nexport default FundraiserDetails;\n","import  React, { useState, useEffect } from 'react';\nimport { Alert } from 'antd';\n\nconst SingleAlert = ({ message, type }) => {\n    const [showAlert, setShowAlert] = useState(true)\n    // console.log(\"message: \", message)\n\n    useEffect(() => {\n        \n    }, []);\n        \n    return (\n       <>\n        {showAlert && <Alert showIcon style={{ width: \"95%\" }} message={message} closable type={type} /> }\n       </>\n    )\n};\n\nexport default SingleAlert;\n","import  React, { useState, useEffect, useContext } from 'react';\nimport {RecordsContext} from '../App';\nimport SingleAlert from './SingleAlert';\n\nconst Alerts = () => {\n    const {\n        recordsDispatch,\n        recordsState: {\n            alert\n        }\n    } = useContext(RecordsContext);\n\n    const [alertList, setAlertList] = useState([]);\n\n    useEffect(() => {\n        // console.log(\"New Alert!\");\n        setAlertList(alertList => [... alertList, alert]);\n    }, [alert]);\n    \n    // console.log(\"alert: \", JSON.stringify(alert));\n\n    return (\n        <div\n            className=\"alertContainer\"\n            style={{ \n                display: 'flex', \n                flexDirection: \"column\", \n                width: '100%', \n                alignItems: 'center', \n                }} \n            >\n            {alertList.map((alert, index) => \n                <SingleAlert \n                    message={alert[\"message\"]} \n                    type={alert[\"type\"]} \n                    key={index} \n                />)\n            }\n        </div>\n    )\n};\n\nexport default Alerts;\n","import  React, { useState, useEffect, useReducer } from 'react';\nimport './App.scss';\nimport FundraiserTimeline from './components/FundraiserTimeline';\nimport AllFundraisers from './components/AllFundraisers';\nimport EditFundraiser from './components/EditFundraiser';\nimport Airtable from 'airtable';\nimport { Layout, Menu, Drawer } from 'antd';\nimport { find, matchesProperty } from 'lodash';\nimport recordsReducer from './reducers/recordsReducer';\nimport FundraiserDetails from './components/FundraiserDetails';\nimport Alerts from './components/Alerts';\nimport scrollIntoView from 'scroll-into-view';\n\nconst { Header, Content, Sider } = Layout;\nexport const base = new Airtable({apiKey: process.env.REACT_APP_AIRTABLE_API_KEY}).base('appWga5gfjEZX4q7X');\nexport const RecordsContext = React.createContext(null);\nexport const RecordsDispatch = React.createContext(null);\n\nconst initialState = {\n  focusedRecordID: '',\n  viewFocusedRecord: false,\n  editDrawerVisible: false,\n  recordToEdit: '',\n  alert: '',\n  recordHasChanged: false,\n  hoveredID: null,\n};\n\nfunction App() {\n  const [fundraisers, setFundraisers] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [focusedFundraiser, setFocusedFundraiser] = useState('');\n  const [recordsState, recordsDispatch] = useReducer(recordsReducer, initialState);\n  // const [editDrawerVisible, setEditDrawerVisible] = useState(false);\n\n  useEffect( () => { \n    // console.log(\"Hey! The record has changed!\")\n    if (recordsState[\"recordHasChanged\"]) {\n      base('Fundraisers').select({\n        view: \"All Fields View\",\n        }).eachPage(function page(records, fetchNextPage) {\n            setFundraisers(records.map(record => record.fields));\n            fetchNextPage();\n        }, function done(err) {\n            if (err) { console.error(err); return; }\n        });\n        recordsDispatch({\n          type: \"logSuccess\",\n        });\n        recordsDispatch({\n          type: \"doNotUpdate\",\n        });\n        setShowAlert(true);\n    } else if (!recordsState[\"focusedRecordID\"]) {\n      base('Fundraisers').select({\n        view: \"All Fields View\",\n        }).eachPage(function page(records, fetchNextPage) {\n            setFundraisers(records.map(record => record.fields));\n            fetchNextPage();\n        }, function done(err) {\n            if (err) { console.error(err); return; }\n        });\n    } else {\n      return null;\n    }\n  }, [recordsState]);\n  \n  useEffect( () => { \n    setFocusedFundraiser(\n      find(fundraisers, matchesProperty('recordID', recordsState[\"focusedRecordID\"])))\n  }, [recordsState, fundraisers]);\n\n  // const dispatchFocusedRecord = (record) => recordsDispatch({\n  //   type: 'chooseRecord',\n  //   payload: record,\n  //   }\n  // );\n//   const scrollParentToChild = (parent, child) => {\n//     let parentRect = parent.getBoundingClientRect();\n//       let parentHeight = parent.clientHeight;\n//       let childRect = child.getBoundingClientRect();\n//       let isViewable = (childRect.top >= parentRect.top) && (childRect.bottom <= parentRect.bottom);\n//       console.log(\"parentHeight: \", parentHeight)\n//       console.log(\"isViewable: \", isViewable)\n//       if (!isViewable) {\n//         parent.scrollTop = (child.top + parent.scrollTop) - parent.top\n//       };\n//   }\n\n//   const scrollElementWithinPage = (page, element) => {\n//     const pageBounding = page.getBoundingClientRect(),\n//       clientBounding = element.getBoundingClientRect()\n\n//     const pageBottom = pageBounding.bottom,\n//       pageTop = pageBounding.top,\n//       clientBottom = clientBounding.bottom,\n//       clientTop = clientBounding.top;\n    \n//     if (pageTop >= clientTop) {\n//       scrollTo(page, -(pageTop - clientTop), 300);\n//     } else if (clientBottom > pageBottom) {\n//       scrollTo(page, clientBottom - pageBottom, 300);\n//     }\n//   };\n\n//   function scrollTo(element, to, duration) {\n//     let start = element.scrollTop,\n//       currentTime = 0,\n//       increment = 20;\n//     let animateScroll = function() {\n//       currentTime += increment;\n//     let val = easeInOutQuad(currentTime, start, to, duration);\n//     element.scrollTop = val;\n//     if (currentTime < duration) {\n//         setTimeout(animateScroll, increment);\n//       }\n//     };\n//     animateScroll();\n//   }\n// // Function for smooth scroll animation with the time duration\n// function easeInOutQuad(time, startPos, endPos, duration) {\n//   time /= duration / 2;\n//   if (time < 1) return (endPos / 2) * time * time + startPos;\n// time--;\n//   return (-endPos / 2) * (time * (time - 2) - 1) + startPos;\n// }\n//   }\n\n    // const scrollToRow = (scrollRow) => {\n    //   scrollIntoView((scrollRow), {\n    //     align: {\n    //       top: 0,\n    //       topOffset: 100,\n    //     },\n    //   });\n    // }\n\n  \n\n\n  const setHovered = (id) => {\n    // let hoveredRecord;\n    // let fundraisersTable;\n    // hoveredRecord = document.getElementById(`row${id}`);\n    // fundraisersTable = document.getElementById(\"fundraisersTable\");\n    // if (hoveredRecord) {\n    //   scrollToRow(hoveredRecord);\n    // };\n    recordsDispatch({\n      type: 'setHovered',\n     payload: id,\n    })\n  };\n\n  const closeEditDrawer = () => recordsDispatch({\n    type: \"closeEditDrawer\",\n  });\n\n  // function createFundraiserIndex(fundraiser) {\n  //   fundraiser.values()\n  // }\n\n  // function createSearchFilter(fundraisers) {\n  //   const fundraiserValues = values(fundraisers);\n  //   console.log('fundraiserValues:', fundraiserValues);\n  //   console.log(fundraisers)\n  //   return (searchTerm) => {\n  //     // some(fundraisers, searchTerm => includes(fundraisers, searchTerm))\n      \n  //   }\n  // }\n\n  // console.log('What we got from it: ', createSearchFilter(fundraisers));\n\n  // const findMatchingFundraisersFor = createSearchFilter(fundraisers);\n\n  \n  // const selectFundraiser = (fundraiserSearchTerm) => {\n    // const createFilterFor = (searchTerm) => fundraiser => some(fundraiser, searchTerm => includes(fundraiser, searchTerm));\n    \n    // console.log(\"fundraisers: \",fundraisers);\n    // console.log(\"fundraiser: \", fundraiserSearchTerm);\n    // const filteredFundraisers = filter(fundraisers, () => includesValue(fundraiserSearchTerm));\n    // console.log(\"filteredFundraisers: \", filteredFundraisers);\n    // console.log(\"includesValue: \", includesValue(fundraiserSearchTerm, fundraisers))\n    // dispatchFocusedRecord(filter(fundraisers, includesValue(fundraiserSearchTerm, fundraisers)));\n    // const selectedFundraiser = _(fundraisers).find(fundraiser);\n  // }\n\n  // console.log(\"recordsState: \", recordsState);\n\n\n  return (\n    <RecordsContext.Provider\n      value={{\n        recordsState,\n        recordsDispatch,\n      }}\n    >\n      <Layout>\n        <Header style={{ position: \"fixed\", zIndex: 1000, width: '100%' }}>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[2]}>\n            <Menu.Item key=\"1\">Fundraisers</Menu.Item>\n            <Menu.Item key=\"2\">Customers</Menu.Item>\n            <Menu.Item key=\"3\">Team</Menu.Item>\n          </Menu>\n        {recordsState[\"alert\"] && <Alerts />}\n        </Header>\n        <Layout>\n          <Sider\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n              backgroundColor: '#d9d9d9',\n            }} \n            width=\"auto\"\n            className=\"site-layout-background\"\n          >\n            <FundraiserTimeline setHovered={setHovered} fundraisers={fundraisers} />\n          </Sider>\n        </Layout>\n        <Layout className=\"site-layout\" style={{ marginLeft: 0 }}>\n            <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n            <Content style={{ overflow: 'initial', minHeight: \"100vh\" }}>\n              <AllFundraisers fundraisers={fundraisers} />\n              {focusedFundraiser && <FundraiserDetails recordToDisplay={focusedFundraiser}/>}\n            </Content>\n            {/* {fundraisers[0] && <Button onClick={() => showEditDrawer(fundraisers[0]['rsecordID'])}>Show Drawer</Button>} */}\n        </Layout>\n      </Layout>\n          {recordsState[\"editDrawerVisible\"] && <Drawer forceRender width={\"80vw\"} visible={recordsState[\"editDrawerVisible\"]} onClose={closeEditDrawer}>\n            <EditFundraiser />\n          </Drawer>}\n    </RecordsContext.Provider>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}